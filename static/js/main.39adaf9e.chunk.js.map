{"version":3,"sources":["app/slices/citiesSlice.js","app/slices/fetchDataSlice.js","components/CitiesList/CitiesList.jsx","components/Header/Header.jsx","App.js","components/CityItem/CityItem.jsx","app/store.js","index.js"],"names":["initialState","citiesSlice","createSlice","name","reducers","addCity","state","action","localStorage","setItem","payload","removeCity","removeItem","filter","city","actions","fetchCityWeather","getWeather","useStyles","makeStyles","cityCard","padding","CitiesList","useState","weatherData","setWeatherData","useSelector","cities","weather","dispatch","useDispatch","useEffect","axios","get","then","res","data","console","log","className","map","i","Card","variant","Typography","component","Button","size","to","onClick","header","backgroundColor","marginBottom","logo","display","justifyContent","alignItems","minHeight","lineHeight","Header","setCity","codicaLogo","src","alt","onSubmit","e","preventDefault","htmlFor","type","value","placeholder","onChange","target","AppBar","Toolbar","App","CityItem","params","useParams","cityName","length","sys","country","main","temp","wind","deg","speed","store","configureStore","reducer","citiesReducer","fetchWeather","fetchWeatherReducer","ReactDOM","render","StrictMode","exact","path","element","style","document","getElementById"],"mappings":"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","file":"static/js/main.39adaf9e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\n\r\nexport const citiesSlice = createSlice({\r\n    name: 'cities',\r\n    initialState,\r\n    reducers: {\r\n        addCity: (state, action) => {\r\n            localStorage.setItem('action.payload', action.payload);\r\n            return [...state, action.payload]\r\n        },\r\n        removeCity: (state = initialState, action) => {\r\n            localStorage.removeItem(action.payload)\r\n            return state.filter(city => city !== action.payload)\r\n        },\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport const { addCity, removeCity } = citiesSlice.actions;\r\n\r\nexport default citiesSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = [];\r\n\r\nexport const fetchCityWeather = createSlice({\r\n    name: 'weather',\r\n    initialState,\r\n    reducers: {\r\n        getWeather: (state, action) => {\r\n            return [...state, action.payload]\r\n        },\r\n    }\r\n\r\n})\r\n\r\nexport const { getWeather } = fetchCityWeather.actions;\r\n\r\n\r\nexport default fetchCityWeather.reducer;\r\n\r\n\r\n/** \r\n * * Застрял, почему-то с фейтчингом данных, пробовал и RTK Queary, но получал \r\n *  !<Object{...} is not a function>  \r\n *  * И данный момент не нашёл почему. \r\n*/","import React, { useEffect, useState } from 'react';\r\nimport { Button, Card, makeStyles, Typography } from '@material-ui/core';\r\nimport { Link, Outlet } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeCity } from '../../app/slices/citiesSlice';\r\nimport { getWeather } from '../../app/slices/fetchDataSlice';\r\nimport axios from 'axios'\r\n// import { useGetCityWeather } from '../../services/cityWeather'\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather?appid=56d61b45593dee9597decc258d63ce78&q='\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    cityCard: {\r\n        padding: \"10px\"\r\n    }\r\n}))\r\n\r\nconst CitiesList = () => {\r\n    const { cityCard } = useStyles();\r\n    const [weatherData, setWeatherData] = useState({})\r\n    const city = useSelector((state) => state.cities)\r\n    const weather = useSelector((state) => state.weather)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        axios.get(`${URL}${city}`)\r\n            .then(res => {\r\n                debugger\r\n                getWeather(res.data)\r\n                setWeatherData(res.data)\r\n                debugger\r\n            })\r\n        debugger\r\n    }, [city]);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('city: ', city)\r\n        console.log('weather: ', weatherData)\r\n        console.log('weatherSlice: ', weather)\r\n    }, [city, weatherData, weather])\r\n    \r\n    // if (!weatherData || weatherData.main.length === 0) return <p>Loading...</p>\r\n\r\n    return (\r\n        <div className=\"citiesList\">\r\n            {city.map((city, i) => {\r\n                return (\r\n                    <div className=\"itemCity\" key={i}>\r\n                        <Card variant=\"outlined\" className={cityCard} >\r\n                            <Typography variant=\"h3\" component=\"h3\">{city}</Typography>\r\n                            {/* <Typography variant=\"subtitle1\" component=\"p\">{weatherData.name}</Typography>\r\n                            <Typography variant=\"subtitle1\" component=\"p\">{weatherData.main.temp}</Typography> */}\r\n                            <Button size=\"small\"> <Link to={`cities/${city}`}> More </Link> </Button>\r\n                            <Button size=\"small\" onClick={() => dispatch(removeCity(city))}>  Delete</Button>\r\n                        </Card>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default CitiesList\r\n","import React, { useState } from 'react'\r\nimport { AppBar, makeStyles, Toolbar, } from \"@material-ui/core\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addCity } from '../../app/slices/citiesSlice'\r\n// import { useGetCityWeather } from '../../services/cityWeather.js';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    header: {\r\n        backgroundColor: \"#fff\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    logo: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        minHeight: \"80px\",\r\n        lineHeight: 1.5,\r\n    },\r\n}));\r\n\r\nconst Header = () => {\r\n    const [city, setCity] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { header, logo } = useStyles();\r\n\r\n    const handleSumbit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addCity(city))\r\n        setCity('')\r\n\r\n    }\r\n\r\n    const displayDesktop = () => {\r\n        return <Toolbar>{codicaLogo}</Toolbar>;\r\n    };\r\n\r\n    const codicaLogo = (\r\n        <div>\r\n            <div className={logo}>\r\n                <NavLink to=\"/\">\r\n                    <img src=\"https://www.codica.com/static/logo.3f55bcea.svg\" alt=\"logo\" />\r\n                </NavLink>\r\n                <form action=\"submit\" onSubmit={handleSumbit}>\r\n                    <label htmlFor=\"text\"> Name</label>\r\n                    <input type=\"text\" value={city} placeholder='Enter city name..' onChange={(e) => setCity(e.target.value)} />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar className={header}>{displayDesktop()}</AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { Outlet } from 'react-router-dom';\r\nimport './App.css';\r\nimport CitiesList from './components/CitiesList/CitiesList';\r\nimport Header from './components/Header/Header';\r\n\r\n\r\n\r\n/**\r\n * * Реализовал добавление города в стейт и localStorage с Redux ToolKit, и запрос погоды SUMBITу импута, получилось только через React Hook UseEffect. \r\n * * Так-же реализован роутинг, по клику переходит на нужный город. \r\n * \r\n * ! Стало интересно:\r\n * * Как лучше делать подобные запросы к API, вот например при перезагрузке страницы \r\n * * мне нужно отправить n-запросов, но API не предоставляет возможность делать запрос погоду нескольких городов сразу?\r\n *  \r\n * \r\n */\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <CitiesList />\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { Typography } from '@material-ui/core'\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Header from '../Header/Header';\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather?appid=56d61b45593dee9597decc258d63ce78&q='\r\n\r\n\r\nconst CityItem = ({ city }) => {\r\n\r\n    const [weatherData, setWeatherData] = useState({})\r\n\r\n    let params = useParams();\r\n    console.log(params)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${URL}${params.cityName}`)\r\n            .then(res => setWeatherData(res.data))\r\n    }, [params])\r\n    if (!weatherData || weatherData.length === 0) return <p>Loading...</p>\r\n    return (\r\n        <div className=\"city\">\r\n            <Header />\r\n            <div className='cityItem'>\r\n                <Typography variant=\"h3\" component=\"h3\">\r\n                    {weatherData.name} {weatherData?.sys?.country}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\">\r\n                    Temp: {weatherData.main.temp}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\">\r\n                    Deg:    {weatherData.wind.deg}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\">\r\n                    Speed: {weatherData.wind.speed}\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CityItem\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport citiesReducer from './slices/citiesSlice';\r\nimport fetchWeatherReducer from './slices/fetchDataSlice';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        cities: citiesReducer,\r\n        fetchWeather: fetchWeatherReducer,\r\n    },\r\n});\r\n\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport CityItem from './components/CityItem/CityItem';\r\nimport CitiesList from './components/CitiesList/CitiesList';\r\nimport store from './app/store.js'\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<App />} />\r\n          <Route path=\"/cities\" element={<CitiesList />} />\r\n          <Route path=\"cities/:cityName\" element={<CityItem />} />\r\n          <Route\r\n            path=\"*\"\r\n            element={\r\n              <main style={{ padding: \"1rem\" }}>\r\n                <p>There's nothing here!</p>\r\n              </main>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}